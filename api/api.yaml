openapi: 3.0.0
info:
  title: Todo Management API
  version: 1.0.0
  description: API to create, retrieve, update, and delete todos.

servers:
  - url: http://localhost:3000

tags:
  - name: Todos
    description: Operations about todos

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the todo.
        title:
          type: string
          description: The title of the todo.
        description:
          type: string
          description: Detailed description of the todo.
        completed:
          type: boolean
          description: Whether the todo is completed.
        due_date:
          type: string
          format: date-time
          description: The due date for the todo.
        priority:
          type: string
          enum: [low, medium, high]
          description: Priority level of the todo.
        created_at:
          type: string
          format: date-time
          description: The timestamp when the todo was created.
        updated_at:
          type: string
          format: date-time
          description: The timestamp when the todo was last updated.
      required:
        - title
        - completed

    TodoCreate:
      type: object
      properties:
        title:
          type: string
          description: The title of the todo.
        description:
          type: string
          description: Detailed description of the todo.
        due_date:
          type: string
          format: date-time
          description: The due date for the todo.
        priority:
          type: string
          enum: [low, medium, high]
          description: Priority level of the todo.
      required:
        - title

    TodoUpdate:
      type: object
      properties:
        title:
          type: string
          description: The title of the todo.
        description:
          type: string
          description: Detailed description of the todo.
        completed:
          type: boolean
          description: Whether the todo is completed.
        due_date:
          type: string
          format: date-time
          description: The due date for the todo.
        priority:
          type: string
          enum: [low, medium, high]
          description: Priority level of the todo.

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message

paths:
  /todos:
    post:
      tags:
        - Todos
      summary: Create a new todo
      description: Creates a todo with the specified details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoCreate"
      responses:
        "201":
          description: Todo created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "400":
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    get:
      tags:
        - Todos
      summary: Get all todos
      description: Retrieves a list of all todos.
      parameters:
        - in: query
          name: completed
          schema:
            type: boolean
          description: Filter todos by completion status
        - in: query
          name: priority
          schema:
            type: string
            enum: [low, medium, high]
          description: Filter todos by priority level
      responses:
        "200":
          description: A list of todos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /todos/{id}:
    get:
      tags:
        - Todos
      summary: Get a todo by ID
      description: Retrieves the details of a specific todo using its unique identifier.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The unique identifier of the todo.
      responses:
        "200":
          description: Details of the requested todo.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Todo not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      tags:
        - Todos
      summary: Update a todo
      description: Updates the details of a specific todo.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The unique identifier of the todo.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoUpdate"
      responses:
        "200":
          description: Todo updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "404":
          description: Todo not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Todos
      summary: Delete a todo
      description: Deletes a specific todo.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The unique identifier of the todo.
      responses:
        "204":
          description: Todo deleted successfully.
        "404":
          description: Todo not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

